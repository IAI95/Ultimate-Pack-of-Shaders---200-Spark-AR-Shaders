precision highp float;

// @param[default=3.0, min=0.0, max=6.0] Shade

void mainImage( in float Shade, out vec4 fragColor )
{
    vec2 iResolution = std::getRenderTargetSize();
    vec2 fragCoord = fragment(floor(std::getRenderTargetSize() * std::getVertexTexCoord()));

    fragColor = vec4(1.0, 1.0, 1.0, 0.0);
	vec2 uv = (2.0 * fragCoord.xy -1.0 * iResolution.xy) / iResolution.y;
    vec3 ldf = vec2(0.97349717, 0.32449905).xyx;
    float a = dot(uv,uv);
    float b = 4.*a;
    if(b > 1.)
    return;
    float t = (2.-sqrt(1.-b))/(1.+a);
    vec3 sn = vec3(t*uv, t-2.);
    
    vec3 ld = ldf * vec2(sin(Shade), cos(Shade)).xxy;
    fragColor = vec4( dot(sn, ld) );
}