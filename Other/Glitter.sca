precision highp float;

// @param[default=12.0, min=0.0, max=20.0] Glitter

void mainImage( in float Glitter, in std::Texture2d tex16, out vec4 fragColor )
{
	vec2 iResolution = std::getRenderTargetSize();
    vec2 fragCoord = fragment(floor(std::getRenderTargetSize() * std::getVertexTexCoord()));
    float iTime = std::getTime();

    vec2 uv = fragCoord/iResolution.x;
    vec2 uv2 = uv;
    uv.y += iTime / 10.0;
    uv.x -= (sin(iTime/10.0)/2.0);
    
    
    uv2.y += iTime / 14.0;
    uv2.x += (sin(iTime/10.0)/9.0);
    float result = 0.0;
    result += tex16.sample(uv * 0.6 + vec2(iTime*-0.003)).r;
    result *= tex16.sample(uv2 * 0.9 + vec2(iTime*+0.002)).b;
    result = pow(result, Glitter);
    fragColor = vec4(18.0)*result;
}