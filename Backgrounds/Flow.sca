precision highp float;

void mainImage( out vec4 Return)
{

    vec2 iResolution = std::getRenderTargetSize();
    vec2 fragCoord = fragment(floor(std::getRenderTargetSize() * std::getVertexTexCoord()));
    float iTime = std::getTime();

    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = 6.0 * fragCoord/iResolution.xy;
    
    for (int n = 1; n <5; n++) {
        float i = float(n);
        uv += vec2(1.0 / i * sin(i * uv.y + iTime + 5.0 * i * 2.0) + 0.8, 1.0 / i * sin(uv.x + iTime + 1.0 * i) + 1.6);
    }
     
    
    vec3 color = vec3(0.1, sin(uv.x + uv.y),1);
    color *= vec3(1,1, 1.0);


    // Output to screen
    Return = vec4(color,1.0);
}